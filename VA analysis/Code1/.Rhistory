# * The addition of sepsisfvr (as below, i.e., if sepsisfvr=1 or sepsisfvr2signs>1) enables sepsis to be diagnosed in the
# presence of fever alone (as well as in the presence of any 2 of the following 8 signs);
# * sepsisfvr2_2: Expert VA and available in GC13 VA (took out "never cried," based on low RR in "Clinical signs that predict severe illness in children under age 2 months: a multicentre study. Lancet 2008,371:135-42". This change should eliminate much of the overlap of sepsis with birth asphyxia since ba5 requires "not able to breathe normally at birth" or "not able to cry at birth": 2 or more of the following 8 signs: (fever-3260 or cold to touch-3290), stopped being able to cry-3090, (not able to suckle normally on day1-3110=2 or stopped being able to suckle-3130), spasms/convulsions-3250, vomited everything-3460, (yellow skin-3470 or yellow eyes-3480), (lethargic-3320 or unconscious-3330), (chest indrawing-3230 or grunting-3240);
# * Also could check on LBI as source of the sepsis: (umbilical pus-3350, umb redness-3360, umb red extend to skin-3370,
#   pustules-3380, 3390-ulcers/pits, red/swollen skin-3400==>combine into one variable if any of the 6);
# if vacq3260=1 or vacq3290=1 then sepsisfvr2sign1=1; else sepsisfvr2sign1=0;	  * (fever/cold-to-touch);
# if vacq3110=2 or vacq3130=1 then sepsisfvr2sign3=1; else sepsisfvr2sign3=0;   * (no normal day1 suckle/stopped suckle);
# if vacq3250=1 then sepsisfvr2sign5=1; else sepsisfvr2sign5=0;                 * (convulsion);
# if vacq3460=1 then sepsisfvr2sign6=1; else sepsisfvr2sign6=0;                 * (vomited everything);
# if vacq3470=1 or vacq3480=1 then sepsisfvr2sign7=1; else sepsisfvr2sign7=0;	  * (jaundice);
# if vacq3090=1 then sepsisfvr2sign9=1; else sepsisfvr2sign9=0;   * (stopped cry);
# if vacq3320=1 or vacq3330=1 then sepsisfvr2sign10=1; else sepsisfvr2sign10=0; * (lethargic/unconscious);
# if vacq3230=1 or vacq3240=1 then sepsisfvr2sign12=1; else sepsisfvr2sign12=0; * (CI/grunt);
# if vacq3350=1 or vacq3360=1 or vacq3370=1 or vacq3380=1 or vacq3390=1 or vacq3400=1 then LBI=1; else LBI=2;
# if LBI=1 then sepsisfvr2sign14=1; else sepsisfvr2sign14=0;                    * with jaundice;
# # * without jaundice (took out of sepsis definition to allow more cases with jaundice to be assigned to NN jaundice
# #   without sepsis, which is lower down in the hierarchy);
# # * with LBI;
# # * without LBI;
# # o	Fever OR cold to touch OR 2 or more of the following 7 signs: (fever OR cold to touch, did not suckle normally
#     on the first day of life OR stopped suckling, convulsions, vomited everything, stopped crying, lethargic OR unconscious, chest indrawing OR grunting)
# sepsisfvr2signs=sepsisfvr2sign1+sepsisfvr2sign3+sepsisfvr2sign5+sepsisfvr2sign6+sepsisfvr2sign9+
# sepsisfvr2sign10+sepsisfvr2sign12;
# if sepsisfvr=1 or sepsisfvr2signs>1 then sepsisfvr2_2=1;
# else sepsisfvr2_2=2;
EAVA$sepsisfvr2sign1 <- ifelse(COMSAdata$id10147 %in% "yes" | COMSAdata$id10284 %in% "yes", 1,0)   # (fever/cold-to-touch);
EAVA$sepsisfvr2sign3 <- ifelse(COMSAdata$id10271 %in% "no" | COMSAdata$id10273 %in% "yes", 1,0)    # (no normal day1 suckle/stopped suckle);
EAVA$sepsisfvr2sign5 <- ifelse(COMSAdata$id10219 %in% "yes", 1,0)                              # (convulsion);
# COMSAdata$sepsisfvr2sign6 <- ifelse(COMSAdata$id10188=="yes", 1,0)                              # (vomited everything);
EAVA$sepsisfvr2sign7 <- ifelse(COMSAdata$id10289 %in% "yes" | COMSAdata$id10265 %in% "yes", 1, 0)  # (jaundice);
EAVA$sepsisfvr2sign9 <- ifelse(COMSAdata$id10107 %in% "yes", 1,0)                              # (stopped cry);
EAVA$sepsisfvr2sign10 <- ifelse(COMSAdata$id10286 %in% "yes" | COMSAdata$id10215 %in% "yes", 1,0)  # (lethargic/unconscious);
EAVA$sepsisfvr2sign12 <- ifelse(COMSAdata$id10172 %in% "yes" | COMSAdata$id10173 %in% c("grunting","grunting dk","grunting wheezing","stridor grunting","stridor grunting wheezing","yes"), 1,0)  # (CI/grunt);
# COMSAdata$LBI <- ifelse(COMSAdata$q5030==1 | COMSAdata$id10287=="yes" | COMSAdata$q5033==1 | COMSAdata$id10227=="yes" | COMSAdata$id10240=="yes", 1,2) # with jaundice;
# COMSAdata$sepsisfvr2sign14 <- ifelse(COMSAdata$LBI==1,1,0)
EAVA$sepsisfvr2signs = EAVA$sepsisfvr2sign1 + EAVA$sepsisfvr2sign3 + EAVA$sepsisfvr2sign5 + EAVA$sepsisfvr2sign7 + EAVA$sepsisfvr2sign9 + EAVA$sepsisfvr2sign10 + EAVA$sepsisfvr2sign12
EAVA$sepsisfvr2_2 <- ifelse(EAVA$sepsisfvr %in% 1 | EAVA$sepsisfvr2signs>1, 1,2)
table(EAVA$sepsisfvr2_2, exclude = NULL)
# * |++| sepsisfvr2_2 without neonatal tetanus |++|;
# * Used to avoid unrealistic comorbidity with neonatal tetanus;
# if sepsisfvr2_2=1 and nnt1=2 then sepsisfvr2_2_nonnt1=1;
# else sepsisfvr2_2_nonnt1=2;
EAVA$sepsisfvr2_2_nonnt1 <- ifelse(EAVA$sepsisfvr2_2 %in% 1 & EAVA$nnt1 %in% 2, 1, 2)
table(EAVA$sepsisfvr2_2_nonnt1, exclude = NULL)
# * |++| possible diarrhea |++|;
# * more frequent loose or liquid stools than usual AND VA sepsis AND no VA diarrhea;
# if vacq3440=1 and sepsisfvr2_2=1 and diarrhea8=2 then possiblediar8_8=1;
# else possiblediar8_8=2;
EAVA$possiblediar8_8 <- ifelse(COMSAdata$id10181 %in% "yes" & EAVA$sepsisfvr2_2 %in% 1 & EAVA$diarrhea8 %in% 2, 1,2)
table(EAVA$possiblediar8_8, exclude = NULL)
# * |++| possible pneumonia |++|;
# * Difficult breathing AND VA sepsis AND No VA pneumonia;
# if vacq3170=1 and sepsisfvr2_2=1 and pneumonia157=2 then possiblepneumonia9=1;
# else possiblepneumonia9=2;
EAVA$possiblepneumonia9 <- ifelse(COMSAdata$id10159 %in% "yes" & EAVA$sepsisfvr2_2 %in% 1 & EAVA$pneumonia157 %in% 2, 1, 2)
table(EAVA$possiblepneumonia9, exclude = NULL)
# * |++| jaundice |++|;
# * jaundice (yellow skin or eyes) without septicemia, but with signs of severe illness, i.e., = neonatal jaundice;
# * 'without septicemia' determined by placing this below septicemia in the hierarchy and by requiring no fever or hypothermia;
# * (yellow skin or eyes) plus (stopped being able to suckle normally or lethargic or unresponsive/unconscious) plus (no fever or hypothermia);
# if (vacq3470=1 or vacq3480=1) and (vacq3130=1 or vacq3320=1 or vacq3330=1) and (vacq3260^=1 and vacq3290^=1) then jaundice2=1;
# else jaundice2=2;
EAVA$jaundice2 <- ifelse((COMSAdata$id10289 %in% "yes" | COMSAdata$id10265 %in% "yes") & (COMSAdata$id10273 %in% "yes" | COMSAdata$id10286 %in% "yes" | COMSAdata$id10215 %in% "yes" | COMSAdata$id10282 %in% "yes" | COMSAdata$id10283=="yes") & (COMSAdata$id10147 %in% "no" & COMSAdata$id10284 %in% "no"), 1, 2)
table(EAVA$jaundice2, exclude = NULL)
# * |++| hemorrhagic disease of the newborn |++|;
# * bleeding from anywhere AND no fever or hypothermia;
# if vacq3420=1 and (vacq3260=2 and vacq3290=2) then hemorrhageNN=1;
# else hemorrhageNN=2;
EAVA$hemorrhageNN <- ifelse(COMSAdata$id10241 %in% "yes" & COMSAdata$id10147 %in% "no" & COMSAdata$id10284 %in% "no", 1, 2)
table(EAVA$hemorrhageNN, exclude = NULL)
# * |++| SUID (sudden unexplained infant death) |++|;
# * appeared healthy and then died suddenly;
# if vacq3490=1 and vacq3010^=1 and vacq3020^=1 and vacq3040^=2 and vacq3050^=1 and vacq3060^=1 and
# (vacq3070^=2 or vacq3080=1) and vacq3090^=1 and vacq3110^=2 and vacq3130^=1 and vacq3170^=1 and
# vacq3200^=1 and vacq3230^=1 and vacq3240^=1 and vacq3250^=1 and vacq3260^=1 and vacq3290^=1 and
# vacq3320^=1 and vacq3330^=1 and vacq3340^=1 and vacq3350^=1 and vacq3360^=1 and vacq3380^=1 and
# vacq3390^=1 and vacq3400^=1 and vacq3410^=1 and vacq3420^=1 and vacq3440^=1 and vacq3460^=1 and
# vacq3470^=1 and vacq3480^=1 then suid=1;
# else suid=2;
EAVA$suid <- ifelse(COMSAdata$id10290 %in% "yes" & COMSAdata$id10115 %in% "no" & COMSAdata$id10370 %in% "no" & COMSAdata$id10111 %in% "yes" & COMSAdata$id10112 %in% "no" & COMSAdata$id10113 %in% "no" &
(COMSAdata$id10105 %in% "yes" | COMSAdata$id10106 %in% c(0:5)) & COMSAdata$id10107 %in% "no" & COMSAdata$id10271 %in% "yes" & COMSAdata$id10273 %in% "no" & COMSAdata$id10159 %in% "no" &
COMSAdata$id10166 %in% "no" & COMSAdata$id10172 %in% "no" & COMSAdata$id10173 %in% "no" & COMSAdata$id10219 %in% "no" & COMSAdata$id10147 %in% "no" & COMSAdata$id10284 %in% "no" &
COMSAdata$id10286 %in% "no" & COMSAdata$id10215 %in% "no" & COMSAdata$id10282 %in% "no" & COMSAdata$id10283 %in% "no" & COMSAdata$id10278 %in% "no" & COMSAdata$id10287 %in% "no" &
COMSAdata$id10288 %in% "no" & COMSAdata$id10233 %in% "no" & COMSAdata$id10240 %in% "no" & COMSAdata$id10239 %in% "no" & COMSAdata$id10241 %in% "no" & COMSAdata$id10181 %in% "no" & COMSAdata$id10189 %in% "no" &
COMSAdata$id10289 %in% "no" & COMSAdata$id10265 %in% "no", 1, 2)
table(EAVA$suid, exclude = NULL)
# Neonates (hierarchies)
#
# RDS near top of the hierarchy and all other preterm at the bottom (“Kalter” hierarchy in the KPB validation paper: according to ICD-10 rules, and yields a much lower estimate of preterm delivery than the WHO estimates)
# if nnt1=1 then allexperdxs1="NNT";
# else if congmalf2=1 then allexpertdxs="Malformation";
# else if (ba5=1 or bi5=1) then allexpertdxs="Intrapartum";
# else if preterm_rds_mo=1 then allexpertdxs="Preterm";
# else if meningitis451_nonnt1=1 then allexpertdxs="Meningitis";
# else if diarrhea8=1 then allexpertdxs="Diarrhea";
# else if pneumonia157=1 then allexpertdxs="Pneumonia";
# else if possiblediar8_8=1 then allexpertdxs="Diarrhea";
# else if possiblepneumonia9=1 then allexpertdxs="Pneumonia";
# else if sepsisfvr2_2_nonnt1=1 then allexpertdxs="Sepsis”;
# else if jaundice2=1 then allexpertdxs="Jaundice";
# else if hemorrhageNN=1 then allexpertdxs="Hemorrhage";
# else if suid=1 then allexpertdxs="SUID";
# else if preterm_all_mo=1 then allexpertdxs="Preterm";
# else allexpertdxs="Unspecified";
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$nnt1==1] <- "NNT"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$congmalf2==1] <- "Maliformation"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & (EAVA$ba5==1 | EAVA$bi5==1)] <- "Intrapartum"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$preterm_rds_mo==1] <- "Preterm"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$meningitis451_nonnt1==1] <- "Meningitis"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$diarrhea8==1] <- "Diarrhea"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$pneumonia157==1] <- "Pneumonia"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$possiblediar8_8==1] <- "Diarrhea"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$possiblepneumonia9==1] <- "Pneumonia"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$sepsisfvr2_2_nonnt1==1] <- "Sepsis"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$jaundice2==1] <- "Jaundice"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$hemorrhageNN==1] <- "Hemorrhage"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$suid==1] <- "SUID"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs) & EAVA$preterm_all_mo==1] <- "Preterm"
# EAVA$allexpertdxs[is.na(EAVA$allexpertdxs)] <- "Unspecified"
# table(EAVA$allexperdxs1, exclude = NULL)
# Option 1 - Compromise Hierarchy
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$nnt1==1] <- "NNT"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$congmalf2==1] <- "Malformation"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & (EAVA$ba5==1 | EAVA$bi5==1)] <- "Intrapartum"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$preterm_all_mo==1] <- "Preterm"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$meningitis451_nonnt1==1] <- "Meningitis"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$diarrhea8==1] <- "Diarrhea"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$pneumonia157==1] <- "Pneumonia"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$possiblediar8_8==1] <- "Diarrhea"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$possiblepneumonia9==1] <- "Pneumonia"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$sepsisfvr2_2_nonnt1==1] <- "Sepsis"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$jaundice2==1] <- "Other"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$hemorrhageNN==1] <- "Other"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1) & EAVA$suid==1] <- "Other"
EAVA$allexpertdxs1[is.na(EAVA$allexpertdxs1)] <- "Unspecified"
################
# Option 2 - All preterm at the bottom and preterm with rds at top
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$nnt1==1] <- "NNT"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$congmalf2==1] <- "Malformation"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & (EAVA$ba5==1 | EAVA$bi5==1)] <- "Intrapartum"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$preterm_rds_mo==1] <- "Preterm"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$meningitis451_nonnt1==1] <- "Meningitis"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$diarrhea8==1] <- "Diarrhea"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$pneumonia157==1] <- "Pneumonia"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$possiblediar8_8==1] <- "Diarrhea"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$possiblepneumonia9==1] <- "Pneumonia"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$sepsisfvr2_2_nonnt1==1] <- "Sepsis"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$jaundice2==1] <- "Other"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$hemorrhageNN==1] <- "Other"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$suid==1] <- "Other"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2) & EAVA$preterm_all_mo==1] <- "Preterm"
EAVA$allexpertdxs2[is.na(EAVA$allexpertdxs2)] <- "Unspecified"
# check <- EAVA[,c("congmalf2","ba5","bi5","preterm_rds_mo","meningitis451_nonnt1","diarrhea8","pneumonia157","possiblediar8_8","possiblepneumonia9",
#                  "sepsisfvr2_2_nonnt1","jaundice2","hemorrhageNN","suid","allexperdxs1")]
EAVA$age <- COMSAdata$age
table(EAVA$allexpertdxs1, EAVA$allexpertdxs2)
###
names(COMSAdata)[names(COMSAdata) == 'champs_deid'] <- 'ID'
EAVA2 <- EAVA[,c("ID","allexpertdxs1")]
COMSAdata2 <- COMSAdata[,c("ID","id10367")]
head(EAVA2)
head(COMSAdata2)
test <- merge(EAVA2,COMSAdata2, by=c("ID"))
head(test)
table(test$allexpertdxs1, test$id10367)
##### format for webinar 7/13/2020
write.csv(multiple_insilicova_comsa,"/Users/EWilson/Desktop/COMSA webinar/temp/insilicova_child_comsa.csv")
library(openVA)
library(reshape2)
library(dplyr)
file <- getwd()
file
# 1. Single cause VA COMSA matrix : This is a matrix where each row represents a subject in the COMSA set, and each column represents a cause.
#     Then for entry i,j (i-th individual, jth cause), there is a 1 is that is the single VA COD for that individual, and 0 if not (using the condensed final cause list).
#     For EAVA, if individual i has an undecided COD, then put 1/C in each entry for that individual, where C is the number of causes
single_interva_neonate_comsa <- readRDS("single_interva_neonate_comsa.rds")
single_insilicova_neonate_comsa <- readRDS("single_insilicova_neonate_comsa.rds")
single_eava_neonate_comsa <- readRDS("single_eava_neonate_comsa.rds")
head(single_interva_neonate_comsa)
head(single_insilicova_neonate_comsa)
head(single_eava_neonate_comsa)
identical(rownames(single_interva_neonate_comsa), rownames(single_insilicova_neonate_comsa))
identical(rownames(single_interva_neonate_comsa), rownames(single_eava_neonate_comsa))
identical(colnames(single_interva_neonate_comsa), colnames(single_insilicova_neonate_comsa))
identical(colnames(single_interva_neonate_comsa), colnames(single_eava_neonate_comsa))
dim(single_interva_neonate_comsa)
dim(single_insilicova_neonate_comsa)
dim(single_eava_neonate_comsa)
unique(rowSums(single_interva_neonate_comsa))
# which(rowSums(single_interva_neonate_comsa)==2)
# x <- subset(single_interva_neonate_comsa, rownames(single_interva_neonate_comsa) %in% c(1437))
unique(rowSums(single_insilicova_neonate_comsa))
unique(rowSums(single_eava_neonate_comsa))
single_interva_child_comsa <- readRDS("single_interva_child_comsa.rds")
single_insilicova_child_comsa <- readRDS("single_insilicova_child_comsa.rds")
single_eava_child_comsa <- readRDS("single_eava_child_comsa.rds")
head(single_interva_child_comsa)
head(single_insilicova_child_comsa)
head(single_eava_child_comsa)
identical(rownames(single_interva_child_comsa), rownames(single_insilicova_child_comsa))
identical(rownames(single_interva_child_comsa), rownames(single_eava_child_comsa))
identical(colnames(single_interva_child_comsa), colnames(single_insilicova_child_comsa))
identical(colnames(single_interva_child_comsa), colnames(single_eava_child_comsa))
dim(single_interva_child_comsa)
dim(single_insilicova_child_comsa)
dim(single_eava_child_comsa)
unique(rowSums(single_interva_child_comsa))
which(rowSums(single_interva_child_comsa)==2)
# x <- subset(single_interva_child_comsa, rownames(single_interva_child_comsa) %in% c(4347))
unique(rowSums(single_insilicova_child_comsa))
unique(rowSums(single_eava_child_comsa))
# which(is.na(rowSums(single_interva_child_comsa)))
# # 2. Multi-cause VA COMSA matrix: For the same individuals above, entry i,j is now the VA algorithm probability for cause j for individual i.
# #    For EAVA if there are two different causes, put .75 for the top cause and .25 for the second cause. Again put 1/C for each entry if the cause is undecided
multi_interva_neonate_comsa <- readRDS("multi_interva_neonate_comsa.rds")
multi_insilicova_neonate_comsa <- readRDS("multi_insilicova_neonate_comsa.rds")
multi_eava_neonate_comsa <- readRDS("multi_eava_neonate_comsa.rds")
head(multi_interva_neonate_comsa)
head(multi_insilicova_neonate_comsa)
head(multi_eava_neonate_comsa)
identical(rownames(multi_interva_neonate_comsa), rownames(multi_insilicova_neonate_comsa))
identical(rownames(multi_interva_neonate_comsa), rownames(multi_eava_neonate_comsa))
identical(colnames(multi_interva_neonate_comsa), colnames(multi_insilicova_neonate_comsa))
identical(colnames(multi_interva_neonate_comsa), colnames(multi_eava_neonate_comsa))
dim(multi_interva_neonate_comsa)
dim(multi_insilicova_neonate_comsa)
dim(multi_eava_neonate_comsa)
unique(rowSums(multi_interva_neonate_comsa))
# write.csv(multi_interva_neonate_comsa, "multi_interva_neonate_comsa.csv")
unique(rowSums(multi_insilicova_neonate_comsa))
unique(rowSums(multi_eava_neonate_comsa))
multi_interva_child_comsa <- readRDS("multi_interva_child_comsa.rds")
multi_insilicova_child_comsa <- readRDS("multi_insilicova_child_comsa.rds")
multi_eava_child_comsa <- readRDS("multi_eava_child_comsa.rds")
head(multi_interva_child_comsa)
head(multi_insilicova_child_comsa)
head(multi_eava_child_comsa)
identical(rownames(multi_interva_child_comsa), rownames(multi_insilicova_child_comsa))
identical(rownames(multi_interva_child_comsa), rownames(multi_eava_child_comsa))
identical(colnames(multi_interva_child_comsa), colnames(multi_insilicova_child_comsa))
identical(colnames(multi_interva_child_comsa), colnames(multi_eava_child_comsa))
dim(multi_interva_child_comsa)
dim(multi_insilicova_child_comsa)
dim(multi_eava_child_comsa)
unique(rowSums(multi_interva_child_comsa))
unique(rowSums(multi_insilicova_neonate_comsa))
unique(rowSums(multi_eava_neonate_comsa))
# 3. Single-cause MITS CHAMPS matrix. Again, for entry i,j put a 1 if cause j is the underlying MITS cause, and 0 otherwise
single_mits_neonate_champs <- readRDS("single_mits_neonate_champs.rds")
head(single_mits_neonate_champs)
single_mits_child_champs <- readRDS("single_mits_child_champs.rds")
head(single_mits_child_champs)
# 4. Multi-cause MITS CHAMPS matrix. For entry i,j, put a 1 if cause j is the underlying MITS cause and there are no immediate causes
#    (or the immediate cause is the same as the underlying). Otherwise, put a .5 if cause j is either an underlying or immediate cause
multi_mits_neonate_champs <- readRDS("multi_mits_neonate_champs.rds")
head(multi_mits_neonate_champs)
multi_mits_child_champs <- readRDS("multi_mits_child_champs.rds")
head(multi_mits_child_champs)
identical(rownames(single_mits_neonate_champs), rownames(multi_mits_neonate_champs))
identical(rownames(single_mits_child_champs), rownames(multi_mits_child_champs))
identical(colnames(single_mits_neonate_champs), colnames(multi_mits_neonate_champs))
identical(colnames(single_mits_child_champs), colnames(multi_mits_child_champs))
dim(single_mits_neonate_champs)
dim(multi_mits_neonate_champs)
dim(single_mits_child_champs)
dim(multi_mits_child_champs)
unique(rowSums(single_mits_neonate_champs))
unique(rowSums(multi_mits_neonate_champs))
unique(rowSums(single_mits_child_champs))
unique(rowSums(multi_mits_child_champs))
# 5. Single cause and multi-cause VA CHAMPS matrices, defined the same way as 1 and 2, except now for the CHAMPS data.
#    Be careful with the getIndivProb function, because we’ve seen that it can screw up the ordering of the subjects,
#    so make sure that the rows in these matrices align with the MITS CHAMPS matrices (i.e. the ID should be the same for each row of the CHAMPS matrices
### SINGLE
single_interva_neonate_champs <- readRDS("single_interva_neonate_champs.rds")
single_insilicova_neonate_champs <- readRDS("single_insilicova_neonate_champs.rds")
single_eava_neonate_champs <- readRDS("single_eava_neonate_champs.rds")
head(single_interva_neonate_champs)
head(single_insilicova_neonate_champs)
head(single_eava_neonate_champs)
identical(rownames(single_interva_neonate_champs), rownames(single_insilicova_neonate_champs))
identical(rownames(single_interva_neonate_champs), rownames(single_eava_neonate_champs))
identical(colnames(single_interva_neonate_champs), colnames(single_insilicova_neonate_champs))
identical(colnames(single_interva_neonate_champs), colnames(single_eava_neonate_champs))
dim(single_interva_neonate_champs)
dim(single_insilicova_neonate_champs)
dim(single_eava_neonate_champs)
unique(rowSums(single_interva_neonate_champs))
# which(rowSums(single_interva_neonate_champs)==2)
unique(rowSums(single_insilicova_neonate_champs))
unique(rowSums(single_eava_neonate_champs))
# which(rowSums(single_eava_neonate_champs)!=1)
single_interva_child_champs <- readRDS("single_interva_child_champs.rds")
single_insilicova_child_champs <- readRDS("single_insilicova_child_champs.rds")
single_eava_child_champs <- readRDS("single_eava_child_champs.rds")
head(single_interva_child_champs)
head(single_insilicova_child_champs)
head(single_eava_child_champs)
identical(rownames(single_interva_child_champs), rownames(single_insilicova_child_champs))
identical(rownames(single_interva_child_champs), rownames(single_eava_child_champs))
identical(colnames(single_interva_child_champs), colnames(single_insilicova_child_champs))
identical(colnames(single_interva_child_champs), colnames(single_eava_child_champs))
dim(single_interva_child_champs)
dim(single_insilicova_child_champs)
dim(single_eava_child_champs)
unique(rowSums(single_interva_child_champs))
unique(rowSums(single_insilicova_child_champs))
unique(rowSums(single_eava_child_champs))
### MULTI
multi_interva_neonate_champs <- readRDS("multi_interva_neonate_champs.rds")
multi_insilicova_neonate_champs <- readRDS("multi_insilicova_neonate_champs.rds")
multi_eava_neonate_champs <- readRDS("multi_eava_neonate_champs.rds")
head(multi_interva_neonate_champs)
head(multi_insilicova_neonate_champs)
head(multi_eava_neonate_champs)
multi_insilicova_neonate_champs <- multi_insilicova_neonate_champs[match(rownames(multi_interva_neonate_champs), rownames(multi_insilicova_neonate_champs)), ]
multi_eava_neonate_champs <- multi_eava_neonate_champs[match(rownames(multi_interva_neonate_champs), rownames(multi_eava_neonate_champs)), ]
identical(rownames(multi_interva_neonate_champs), rownames(multi_insilicova_neonate_champs))
identical(rownames(multi_interva_neonate_champs), rownames(multi_eava_neonate_champs))
identical(colnames(multi_interva_neonate_champs), colnames(multi_insilicova_neonate_champs))
identical(colnames(multi_interva_neonate_champs), colnames(multi_eava_neonate_champs))
dim(multi_interva_neonate_champs)
dim(multi_insilicova_neonate_champs)
dim(multi_eava_neonate_champs)
unique(rowSums(multi_interva_neonate_champs))
unique(rowSums(multi_insilicova_neonate_champs))
unique(rowSums(multi_eava_neonate_champs))
multi_interva_child_champs <- readRDS("multi_interva_child_champs.rds")
multi_insilicova_child_champs <- readRDS("multi_insilicova_child_champs.rds")
multi_eava_child_champs <- readRDS("multi_eava_child_champs.rds")
head(multi_interva_child_champs)
head(multi_insilicova_child_champs)
head(multi_eava_child_champs)
multi_insilicova_child_champs <- multi_insilicova_child_champs[match(rownames(multi_interva_child_champs), rownames(multi_insilicova_child_champs)), ]
multi_eava_child_champs <- multi_eava_child_champs[match(rownames(multi_interva_child_champs), rownames(multi_eava_child_champs)), ]
identical(rownames(multi_interva_child_champs), rownames(multi_insilicova_child_champs))
identical(rownames(multi_interva_child_champs), rownames(multi_eava_child_champs))
identical(colnames(multi_interva_child_champs), colnames(multi_insilicova_child_champs))
identical(colnames(multi_interva_child_champs), colnames(multi_eava_child_champs))
dim(multi_interva_child_champs)
dim(multi_insilicova_child_champs)
dim(multi_eava_child_champs)
unique(rowSums(multi_interva_child_champs))
unique(rowSums(multi_insilicova_child_champs))
unique(rowSums(multi_eava_child_champs))
identical(rownames(single_interva_child_champs), rownames(multi_interva_child_champs))
identical(rownames(single_interva_child_champs), rownames(multi_interva_child_champs))
identical(colnames(single_interva_child_champs), colnames(multi_interva_child_champs))
identical(colnames(single_interva_child_champs), colnames(multi_interva_child_champs))
##### format for webinar 7/13/2020
write.csv(multiple_insilicova_comsa,"/Users/EWilson/Desktop/COMSA webinar/temp/insilicova_child_comsa.csv")
# Last edited: 9 July 2020
# Last run:    9 July 2020
# Objective: Produce broad cause graphs from individual COD, for each method
rm(list = ls())
library(openVA)
library(dplyr)
library(readxl)
library(tidyverse)
library(haven)
library(readstata13)
library(sjlabelled)
file <- getwd()
load(file.path(file,"/Data/openVA_comsa.Rdata"))
'%!in%' <- function(x,y)!('%in%'(x,y))
### keep only objects we're using
rm(list = ls()[!ls() %in% c("InterVA5.ch5_14", "InterVA5.ad15_49","InterVA5.ad50",
"codeVAInsilico.ch5_14", "codeVAInsilico.ad15_49", "codeVAInsilico.ad50")])
file <- getwd()
########################################################### Start here for data visualization - no calibration for these age categories
InterVA.COD.ch5_14 <- data.frame(lapply(getTopCOD(InterVA5.ch5_14),as.character), stringsAsFactors = FALSE)
InterVA.COD.ad15_49 <- data.frame(lapply(getTopCOD(InterVA5.ad15_49),as.character), stringsAsFactors = FALSE)
InterVA.COD.ad50 <- data.frame(lapply(getTopCOD(InterVA5.ad50),as.character), stringsAsFactors = FALSE)
Insilico.COD.ch5_14 <- data.frame(lapply(getTopCOD(codeVAInsilico.ch5_14),as.character), stringsAsFactors = FALSE)
Insilico.COD.ad15_49 <- data.frame(lapply(getTopCOD(codeVAInsilico.ad15_49),as.character), stringsAsFactors = FALSE)
Insilico.COD.ad50 <- data.frame(lapply(getTopCOD(codeVAInsilico.ad50),as.character), stringsAsFactors = FALSE)
# Put InterVA and Insilico together:
head(InterVA.COD.ch5_14)
head(InterVA.COD.ad15_49)
head(InterVA.COD.ad50)
head(Insilico.COD.ch5_14)
head(Insilico.COD.ad15_49)
head(Insilico.COD.ad50)
################################## reformat original COD
names(InterVA.COD.ch5_14)[names(InterVA.COD.ch5_14) == 'cause'] <- 'InterVA'
names(Insilico.COD.ch5_14)[names(Insilico.COD.ch5_14) == 'cause'] <- 'InsilicoVA'
names(InterVA.COD.ad15_49)[names(InterVA.COD.ad15_49) == 'cause'] <- 'InterVA'
names(Insilico.COD.ad15_49)[names(Insilico.COD.ad15_49) == 'cause'] <- 'InsilicoVA'
names(InterVA.COD.ad50)[names(InterVA.COD.ad50) == 'cause'] <- 'InterVA'
names(Insilico.COD.ad50)[names(Insilico.COD.ad50) == 'cause'] <- 'InsilicoVA'
################################## Compile and write out results
COD.ch5_14 <- merge(InterVA.COD.ch5_14,Insilico.COD.ch5_14, by=c("ID"))
COD.ad15_49 <- merge(InterVA.COD.ad15_49,Insilico.COD.ad15_49, by=c("ID"))
COD.ad50 <- merge(InterVA.COD.ad50,Insilico.COD.ad50, by=c("ID"))
head(COD.ch5_14)
head(COD.ad15_49)
head(COD.ad50)
############## ADD sex and province
COMSAdata <- read.csv(file.path(file,"Data/20200512_all_WHO_wgt.csv"), stringsAsFactors = FALSE)
names(COMSAdata)[names(COMSAdata) == 'comsa_id'] <- 'ID'
names(COMSAdata)[names(COMSAdata) == 'id10019'] <- 'sex'
COMSAdata <- COMSAdata[,c("ID","sex","province")]
COD.5to14 <- merge(COD.ch5_14,COMSAdata, by=c("ID"))
COD.15to49 <- merge(COD.ad15_49,COMSAdata, by=c("ID"))
COD.50 <- merge(COD.ad50,COMSAdata, by=c("ID"))
write.csv(COD.5to14,"/Users/EWilson/Desktop/COMSA webinar/July13 figures/COD.5to14.csv")
write.csv(COD.15to49,"/Users/EWilson/Desktop/COMSA webinar/July13 figures/COD.15to49.csv")
write.csv(COD.50,"/Users/EWilson/Desktop/COMSA webinar/July13 figures/COD.50.csv")
## LOAD ON SR
#### define cause categories
Maternal <- c("Abortion-related death", "Anaemia of pregnancy","Ectopic pregnancy",
"Obstetric haemorrhage","Obstetric hemorrhage", "Pregnancy-induced hypertension", "Other and unspecified maternal CoD", "Pregnancy-induced sepsis",
'Pregnancy-related sepsis',"Ruptured uterus",
"Severe anaemia","Obstructed labour")
Cancer <- c("Breast neoplasms","Digestive neoplasms","Leukemia/lymphoma","Neoplasms","Oral neoplasms","Other and unspecified neoplasms","Reproductive neoplasms MF","Respiratory neoplasms")
Injury <- c("Accid drowning and submersion","Accid expos to smoke fire & flame","Accid fall","Accid poisoning & noxious subs","Assault",
"Contact with venomous plant/animal","Intentional self-harm",
"Other and unspecified external CoD", "Other injuries", "Exposure to force of nature", "Other injuries",
"Road traffic accident")
Tuberculosis <- c("Pulmonary tuberculosis")
HIV <- c("HIV/AIDS","HIV/AIDS related death")
Other_adult <- c("Other and unspecified NCD", "Acute abdomen", "Acute cardiac disease", "Asthma", "Chronic obstructive pulmonary dis", "Chronic respiratory",
"Diabetes","Diabetes mellitus","Epilepsy", "Ischemic heart disease", "Other and unspecified NCD", "Liver cirrhosis", "Renal failure", "Sickle cell with crisis",
"Other and unspecified cardiac dis", "Severe malnutrition")
Malaria <- c("Malaria")
Diarrhea <- c("Diarrhoeal diseases")
Pneumonia <- c("Acute resp infect incl pneumonia")
Other_infections_adult <- c("Meningitis and encephalitis", "Other and unspecified infections", "Pertussis", "Sepsis (non-obstetric)", "Hemorrhagic fever (non-dengue)","Haemorrhagic fever (non-dengue)",
"Other and unspecified infect dis","Dengue fever","Measles","Tetanus")
Stroke <- c("Stroke")
########### categorize deaths, adults 5-14
# unique(COD.5to14$InsilicoVA)
# head(COD.5to14)
# COD.5to14 <- subset(COD.5to14, sex == "male")
# head(COD.5to14)
# COD.5to14 <- subset(COD.5to14, sex == "female")
head(COD.5to14)
# COD.5to14$InterVA[COD.5to14$InterVA %in% Maternal] <- "Maternal"
COD.5to14$InterVA[COD.5to14$InterVA %in% Maternal] <- "Other"
COD.5to14$InterVA[COD.5to14$InterVA %in% Cancer] <- "Cancer"
COD.5to14$InterVA[COD.5to14$InterVA %in% Injury] <- "Injury"
COD.5to14$InterVA[COD.5to14$InterVA %in% Tuberculosis] <- "Tuberculosis"
COD.5to14$InterVA[COD.5to14$InterVA %in% HIV] <- "HIV"
COD.5to14$InterVA[COD.5to14$InterVA %in% Other_adult] <- "Other"
COD.5to14$InterVA[COD.5to14$InterVA %in% Malaria] <- "Malaria"
COD.5to14$InterVA[COD.5to14$InterVA %in% Diarrhea] <- "Diarrhea"
COD.5to14$InterVA[COD.5to14$InterVA %in% Pneumonia] <- "Pneumonia"
COD.5to14$InterVA[COD.5to14$InterVA %in% Stroke] <- "Other"
COD.5to14$InterVA[COD.5to14$InterVA %in% Other_infections_adult] <- "Other infections"
COD.5to14$InterVA[COD.5to14$InterVA=="Undetermined"] <- "Unspecified"
table(COD.5to14$InterVA,COD.5to14$InterVA, exclude = NULL)
# COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Maternal] <- "Maternal"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Maternal] <- "Other"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Cancer] <- "Cancer"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Injury] <- "Injury"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Tuberculosis] <- "Tuberculosis"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% HIV] <- "HIV"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Other_adult] <- "Other"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Malaria] <- "Malaria"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Diarrhea] <- "Diarrhea"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Pneumonia] <- "Pneumonia"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Stroke] <- "Other"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA %in% Other_infections_adult] <- "Other infections"
COD.5to14$InsilicoVA[COD.5to14$InsilicoVA=="Undetermined"] <- "Unspecified"
table(COD.5to14$InsilicoVA,COD.5to14$InsilicoVA, exclude = NULL)
# Last edited: 2 Aug 2020
# Last run:    2 Aug 2020
# Objective: format multi cause va (interva and insilicova) comsa
library(openVA)
file <- getwd()
load(file.path(file,"/Data/openVA_comsa.Rdata"))
### keep only objects we're using
rm(list = ls()[!ls() %in% c("InterVA5.neonate", "InterVA5.ch1_59","codeVAInsilico.neonate","codeVAInsilico.ch1_59")])
file <- getwd()
getwd()
# Last edited: 8 Aug 2020
# Last run:    8 Aug 2020
# Objective: Produce broad cause graphs from individual COD, for each method
rm(list = ls())
library(openVA)
file <- getwd()
load(file.path(file,"/Data/openVA_comsa.Rdata"))
'%!in%' <- function(x,y)!('%in%'(x,y))
### keep only objects we're using
rm(list = ls()[!ls() %in% c("InterVA5.ch5_14", "InterVA5.ad15_49","InterVA5.ad50",
"codeVAInsilico.ch5_14", "codeVAInsilico.ad15_49", "codeVAInsilico.ad50")])
file <- getwd()
file
NeonateMITS <- read.csv("Data/mits_neonate_champs.csv")
dim(NeonateMITS)
# Last edited: 2 Aug 2020
# Last run:    2 Aug 2020
# Objective: format matrices so that row names match across methods
library(openVA)
library(reshape2)
library(dplyr)
library(compare)
file <- getwd()
date <- "20200802_comsa_data"
data <- read.csv("Users/EWilson/Desktop/COMSA maternity leave/VA analysis/Data/country_mits_neonate_champs.csv")
data <- read.csv("Users/EWilson/Desktop/COMSA maternity leave/VA analysis/Data/country_mits_neonate_champs.csv")
data <- read.csv("/Users/EWilson/Desktop/COMSA maternity leave/VA analysis/Data/country_mits_neonate_champs.csv")
head(data)
table(data$Name)
dim(data)
513-251
COD.15to49 <- read.csv("~/Desktop/COMSA maternity leave/VA analysis/Results/COD.15to49.csv")
View(COD.15to49)
head(COD.15to49)
table(COD.15to49$InsilicoVA_sm_cause, COD.15to49$InsilicoVA)
colSums(table(COD.15to49$InsilicoVA_sm_cause, COD.15to49$InsilicoVA))
table(COD.15to49$InterVA_sm_cause)
